<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.yangyang" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <mvc:annotation-driven conversion-service="conversionService"/>

    <!-- spring 已经提供excel的抽象试图,可以继承abstractExcelView-->
    <!-- 配置视图解析器 ,通过order来定义优先级,order越小优先级越高 -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="100"  />
    </bean>


    <!-- config InternalResourceViewResolver prefix+returnValue+suffix  -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- i18n-->
    <!--<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">-->
        <!--<property name="basename" value="i18n"/>-->
    <!--</bean>-->

    <!-- redirect page -->
    <mvc:view-controller path="/success" view-name="success" />
    <mvc:view-controller path="/i18n" view-name="i18n" />
    <mvc:view-controller path="/i18n2" view-name="i18n2" />
    <!-- if requestMapping disable, add this -->
    <!--<mvc:annotation-driven />-->

    <!-- 配置静态资源 -->
    <mvc:default-servlet-handler />

    <!-- config converter -->
    <!--<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <ref bean="employeConverter"/>
            </set>
        </property>
    </bean>

    <!-- 配置国际化资源文件-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="i18n"/>
    </bean>

    <!-- 配置sessionLocalResolver-->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
    <!-- 配置拦截器 LocalChanceInterceptor -->
    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
        <bean class="com.yangyang.interceptors.FirstInterceptor" />
        <!-- 配置拦截器 作用/不作用 的路劲-->
        <mvc:interceptor>
            <!-- 只作用于/emps这个路径-->
            <mvc:mapping path="/emps"/>
            <bean class="com.yangyang.interceptors.SecondInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- 配置文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
        <property name="maxUploadSize" value="1024000"  />
    </bean>

    <!-- 配置简单异常映射-->
    <bean id="simpleMappingExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!-- 会带上异常出现在页面上 ${exception}-->
                <prop key="java.lang.ArrayIndexOutOfBoundsException">error</prop>
            </props>
        </property>
    </bean>
</beans>